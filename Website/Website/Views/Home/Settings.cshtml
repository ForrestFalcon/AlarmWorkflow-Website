@model AlarmWorkflow.Website.Reports.Models.SettingsData

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    if (ViewBag.Save)
    {
        <div class="alert alert-success" role="alert">Einstellungen gespeichert!</div>
    }

    if (!Model.EditSettings)
    {
        <div class="alert alert-danger" role="alert">Einstellungen editieren ist nicht erlaubt!</div>
    }

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="panel panel-default">
            <div class="panel-heading">Google-Maps Einstellungen</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.Traffic, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Traffic)
                            @Html.ValidationMessageFor(model => model.Traffic, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Tilt, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Tilt)
                            @Html.ValidationMessageFor(model => model.Tilt, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Route, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Route)
                            @Html.ValidationMessageFor(model => model.Route, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.ZoomControl, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.ZoomControl)
                            @Html.ValidationMessageFor(model => model.ZoomControl, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.MapTypeGoogle, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="checkbox">
                            @Html.EnumDropDownListFor(model => model.MapTypeGoogle)
                            @Html.ValidationMessageFor(model => model.MapTypeGoogle, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.GoogleZoomLevel, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.GoogleZoomLevel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.GoogleZoomLevel, "", new { @class = "text-danger" })
                    </div>
                </div>

            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">OpenStreetMap Einstellungen</div>
            <div class="panel-body">
                <div class="form-group">
                    @Html.LabelFor(model => model.OSMZoomLevel, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.OSMZoomLevel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.OSMZoomLevel, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-default">
            <div class="panel-heading">Alarmpage Einstellungen</div>
            <div class="panel-body">

                <div class="form-group">
                    @Html.LabelFor(model => model.MaxAge, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.MaxAge, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.MaxAge, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.UpdateIntervalMs, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.UpdateIntervalMs, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.UpdateIntervalMs, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NonAcknowledgedOnly, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.NonAcknowledgedOnly)
                            @Html.ValidationMessageFor(model => model.NonAcknowledgedOnly, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-1">
                @if (Model.EditSettings)
                {
                    <input type="submit" value="Einstellungen speichern" class="btn btn-default" />
                }
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
